// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PenTestDataViewer.Api.Database;

#nullable disable

namespace PenTestDataViewer.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230813192612_AddedHosts")]
    partial class AddedHosts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PenTestDataViewer.Api.Model.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SubDomain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TopDomain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            Id = new Guid("409150a9-c072-4ab9-adb9-5134dac14d46"),
                            SubDomain = "",
                            TopDomain = "topdomain.target"
                        },
                        new
                        {
                            Id = new Guid("3436a0c1-9ac4-441d-ab73-7184eb787d86"),
                            SubDomain = "www",
                            TopDomain = "topdomain.target"
                        },
                        new
                        {
                            Id = new Guid("676351fe-0afe-4c79-a733-ab2d8edc0ae5"),
                            SubDomain = "www3",
                            TopDomain = "topdomain.target"
                        },
                        new
                        {
                            Id = new Guid("d929bc8c-affe-4741-9a1e-8315aa0fd1a1"),
                            SubDomain = "help",
                            TopDomain = "topdomain.target"
                        });
                });

            modelBuilder.Entity("PenTestDataViewer.Api.Model.Host", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("IPv4Raw")
                        .HasMaxLength(4)
                        .HasColumnType("bytea");

                    b.Property<byte[]>("IPv6Raw")
                        .HasMaxLength(16)
                        .HasColumnType("bytea");

                    b.Property<string>("OS")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hosts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f262554-fe8e-4abe-a769-08892865dc54"),
                            IPv4Raw = new byte[] { 127, 0, 0, 1 }
                        },
                        new
                        {
                            Id = new Guid("8cf13b97-ba73-4716-8d96-8d209c568771"),
                            IPv4Raw = new byte[] { 192, 168, 0, 1 }
                        },
                        new
                        {
                            Id = new Guid("13e2182e-24a3-41dd-bd63-e0d10460fb07"),
                            IPv4Raw = new byte[] { 10, 10, 0, 123 }
                        },
                        new
                        {
                            Id = new Guid("9f32b916-00cd-478a-a221-b5399189fbe8"),
                            IPv6Raw = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
