using PenTestDataViewer.Api.Model;
using System.Net;

namespace PenTestDataViewer.Api.DataTransferModel.Host
{
    public class HostDto
    {
        public static HostDto FromDatabaseModel(Model.Host host) => new HostDto
        {
            Id = host.Id,
            IPv4 = host.IPv4 != null ? host.IPv4.ToString() : string.Empty,
            IPv6 = host.IPv6 != null ? host.IPv6.ToString() : string.Empty,
            OS = host.OS,
            Domains = host.Domains.Select(d => HostDomainDto.FromDatabaseModel(d)).ToList(),
            Ports = host.Ports.Select(HostPortDto.FromDatabaseModel).ToList(),
        };

        public static Model.Host ToDatabaseModel(HostDto host)
        {
            var model = new Model.Host();
            model.Id = host.Id ?? Guid.NewGuid();

            var ipv4Filled = IPAddress.TryParse(host.IPv4, out var ipv4);
            if (ipv4Filled)
            {
                model.IPv4 = ipv4;
            }

            var ipv6Filled = IPAddress.TryParse(host.IPv6, out var ipv6);
            if (ipv6Filled)
            {
                model.IPv6 = ipv6;
            }

            model.OS = host.OS;
            if (host.Domains?.Any() ?? false)
            {
                model.Domains
                    .AddRange(host.Domains.Select(HostDomainDto.ToDatabaseModel));
            }

            if (host.Ports?.Any() ?? false)
            {
                model.Ports
                    .AddRange(host.Ports.Select(p => HostPortDto.ToDatabaseModel(p, model.Id)));
            }

            return model;
        }

        public Guid? Id { get; set; }

        public string? IPv4 { get; set; }

        public string? IPv6 { get; set; }

        public string? OS { get; set; }

        public List<HostDomainDto>? Domains { get; set; }

        public List<HostPortDto> Ports { get; set; }
    }
}
